# Args: <path_to_bop_data> <bop_toolkit_path> <path_to_cc_textures> <output_dir>
{
  "version": 3,
  "setup": {
    "blender_install_path": "/home_local/<env:USER>/blender/"
  },
  "modules": [
    {
      "module": "main.Initializer",
      "config": {
        "global": {
          "output_dir": "examples/cup/room"
        }
      }
    },
    {
      "module": "constructor.BasicMeshInitializer",
      "config": {
        "meshes_to_add": [
          {
            "type": "plane",
            "name": "ground_plane0",
            "scale": [ 2, 2, 1 ]
          },
          {
            "type": "plane",
            "name": "ground_plane1",
            "scale": [ 2, 2, 1 ],
            "location": [ 0, -2, 2 ],
            "rotation": [ -1.570796, 0, 0 ] # switch the sign to turn the normals to the outside
          },
          {
            "type": "plane",
            "name": "ground_plane2",
            "scale": [ 2, 2, 1 ],
            "location": [ 0, 2, 2 ],
            "rotation": [ 1.570796, 0, 0 ]
          },
          {
            "type": "plane",
            "name": "ground_plane4",
            "scale": [ 2, 2, 1 ],
            "location": [ 2, 0, 2 ],
            "rotation": [ 0, -1.570796, 0 ]
          },
          {
            "type": "plane",
            "name": "ground_plane5",
            "scale": [ 2, 2, 1 ],
            "location": [ -2, 0, 2 ],
            "rotation": [ 0, 1.570796, 0 ]
          },
          {
            "type": "plane",
            "name": "light_plane",
            "location": [ 0, 0, 10 ],
            "scale": [ 3, 3, 1 ]
          }
        ]
      }
    },
    {
      "module": "manipulators.MaterialManipulator",
      "config": {
        "selector": {
          "provider": "getter.Material",
          "conditions": {
            "name": "light_plane_material"
          }
        },
        "cf_switch_to_emission_shader": {
          "color": {
            "provider": "sampler.Color",
            "min": [ 0.5, 0.5, 0.5, 1.0 ],
            "max": [ 1.0, 1.0, 1.0, 1.0 ]
          },
          "strength": {
            "provider": "sampler.Value",
            "type": "float",
            "min": 1,
            "max": 10
          }
        }
      }
    },
    {
      "module": "loader.BlendLoader",
      "config":
        {
          "path": "examples/cup/cup.blend",
          "add_properties": {
            "cp_is_cup": True
          },
        },
    },
    {
      "module": "object.OnSurfaceSampler",
      "config": {
        "objects_to_sample": {
          "provider": "getter.Entity",
          "conditions": {
            "cp_is_cup": True
          }
        },
        "surface": {
          "provider": "getter.Entity",
          "index": 0,
          "conditions": {
            "name": "ground_plane0"
          }
        },
        "pos_sampler": {
          "provider": "sampler.UpperRegionSampler",
          "to_sample_on": {
            "provider": "getter.Entity",
            "index": 0,
            "conditions": {
              "name": "ground_plane0"
            }
          },
          "min_height": 1,
          "max_height": 4,
          "face_sample_range": [ 0.4, 0.6 ],
          "use_ray_trace_check": False,
        },
        "min_distance": 0.01,
        "max_distance": 0.20,
        "rot_sampler": {
          "provider": "sampler.Uniform3d",
          "min": [ 0, 0, 0 ],
          "max": [ 0, 0, 6.28 ]
        }
      }
    },
    {
      "module": "lighting.LightSampler",
      "config": {
        "lights": [
          {
            "location": {
              "provider": "sampler.Shell",
              "center": [ 0, 0, 0 ],
              "radius_min": 1, # now depends on the bottom area of the box
              "radius_max": 1.5, # this one too
              "elevation_min": 1,
              "elevation_max": 89,
              "uniform_elevation": True
            },
            "color": {
              "provider": "sampler.Color",
              "min": [ 0.5, 0.5, 0.5, 1.0 ],
              "max": [ 1.0, 1.0, 1.0, 1.0 ]
            },
            "type": "POINT",
            "energy":
              {
                "provider": "sampler.Value",
                "type": "int",
                "min": 100,
                "max": 300,
              },
          }
        ]
      }
    },
    {
      "module": "camera.CameraSampler",
      "config":
        {
          "cam_poses":
            [
              {
                "number_of_samples": 5,
                "max_tries": 100000,
                "proximity_checks": {
                  "min": 0.1
                },
                "check_if_objects_visible":
                  {
                    "provider": "getter.Entity",
                    "conditions": {
                      "cp_is_cup": True,
                    },
                  },
                "location":
                  {
                    "provider": "sampler.Shell",
                    "center":
                      {
                        "provider": "getter.POI",
                        "selector":
                          {
                            "provider": "getter.Entity",
                            "conditions": {
                              "cp_is_cup": True
                            },
                          },
                      },
                    "radius_min": 0.1,
                    "radius_max": 1.0,
                    "elevation_min": 1,
                    "elevation_max": 89,
                    "uniform_elevation": True,
                  },
                "rotation":
                  {
                    "format": "look_at",
                    "value":
                      {
                        "provider": "getter.AttributeMerger",
                        "elements":
                          [
                            {
                              "provider": "getter.POI",
                              "selector":
                                {
                                  "provider": "getter.Entity",
                                  "conditions": {
                                    "cp_is_cup": True
                                  },
                                },
                            },
                            {
                              "provider": "sampler.Uniform3d",
                              "min": [ -0.2, -0.2, -0.2 ],
                              "max": [ 0.2, 0.2, 0.2 ],
                            },
                          ],
                        "transform_by": "sum",
                      },
                    "inplane_rot":
                      {
                        "provider": "sampler.Value",
                        "type": "float",
                        "min": -0.7854,
                        "max": 0.7854,
                      },
                  },
              },
            ],
          "intrinsics": {
            "fov": 1,
            "resolution_x": 700,
            "resolution_y": 400 },
        },
    },
    {
      "module": "renderer.RgbRenderer",
      "config": {
        "output_is_temp": False,
        "cpu_threads": 8
      }
    },
  ]
}
