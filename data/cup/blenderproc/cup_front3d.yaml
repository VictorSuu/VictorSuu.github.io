---
{
  "version": 3,
  "setup": {
    "blender_install_path": "/home_local/<env:USER>/blender/"
  },
  "modules":
    [
      {
        "module": "main.Initializer",
        "config": {
          "global":
            {
              "output_dir": "examples/cup/front3d",
              "sys_paths": [ "resources/bop_toolkit" ],
            },
        },
      },
      {
        "module": "loader.Front3DLoader",
        "config": {
          "json_path": {
            "provider": "sampler.Path",
            "path": "resources/front_3D/3D-FRONT/*.json",
          },
          "3D_future_model_path": "resources/front_3D/3D-FUTURE-model",
          "add_properties": {
            "cp_physics": False,
            "cp_category_id": 0
          },
          "cf_set_shading": "AUTO",
          "cf_shading_auto_smooth_angle_in_deg": 85,
        },
      },
      {
        "module": "manipulators.WorldManipulator",
        "config": {
          "cf_set_world_category_id": 0
        },
      },
      {
        "module": "loader.CCMaterialLoader",
        "config": {
          "folder_path": "resources/cctextures",
          "used_assets": [ "Bricks", "Wood", "Carpet", "Tile", "Marble" ],
          "preload": True
        },
      },
      {
        "module": "manipulators.EntityManipulator",
        "config": {
          "selector": {
            "provider": "getter.Entity",
            "conditions": {
              "name": "Floor.*",
              "type": "MESH"
            },
          },
          "cf_randomize_materials": {
            "randomization_level": 0.95,
            "materials_to_replace_with":
              {
                "provider": "getter.Material",
                "random_samples": 1,
                "conditions": {
                  "cp_is_cc_texture": true
                },
              },
          },
        },
      },
      {
        "module": "manipulators.EntityManipulator",
        "config": {
          "selector": {
            "provider": "getter.Entity",
            "conditions": {
              "name": "Baseboard.*",
              "type": "MESH"
            },
          },
          "mode": "once_for_all",
          "cf_randomize_materials": {
            "randomization_level": 1.0,
            "materials_to_replace_with": {
              "provider": "getter.Material",
              "random_samples": 1,
              "conditions": {
                "cp_is_cc_texture": true,
                "cp_asset_name": "WoodFloor.*",
              },
            },
          },
        },
      },
      {
        "module": "manipulators.EntityManipulator",
        "config": {
          "selector": {
            "provider": "getter.Entity",
            "conditions": {
              "name": "Door.*",
              "type": "MESH"
            },
          },
          "mode": "once_for_all",
          "cf_randomize_materials": {
            "randomization_level": 1.0,
            "materials_to_replace_with": {
              "provider": "getter.Material",
              "random_samples": 1,
              "conditions": {
                "cp_is_cc_texture": true,
                "cp_asset_name": "WoodFloor.*",
              },
            },
          },
        },
      },
      {
        "module": "manipulators.EntityManipulator",
        "config": {
          "selector": {
            "provider": "getter.Entity",
            "conditions": {
              "name": "Wall.*",
              "type": "MESH"
            },
          },
          "cf_randomize_materials": {
            "randomization_level": 0.1,
            "materials_to_replace_with": {
              "provider": "getter.Material",
              "random_samples": 1,
              "conditions": {
                "cp_is_cc_texture": true,
                "cp_asset_name": "Marble.*"
              },
            },
          },
        },
      },
      {
        "module": "loader.CCMaterialLoader",
        "config": {
          "folder_path": "resources/cctextures",
          "used_assets": [ "Bricks", "Wood", "Carpet", "Tile", "Marble" ],
          "fill_used_empty_materials": True,
        },
      },
      {
        "module": "loader.HavenEnvironmentLoader"
      },
      {
        "module": "manipulators.EntityManipulator",
        "config": {
          "selector": {
            "provider": "getter.Entity",
            "random_samples": 1,
            "conditions":
              [
                { "cp_coarse_grained_class": 1, "type": "MESH" },
                { "cp_coarse_grained_class": 7, "type": "MESH" },
                { "cp_coarse_grained_class": 8, "type": "MESH" },
                { "cp_coarse_grained_class": 15, "type": "MESH" },
                { "cp_coarse_grained_class": 16, "type": "MESH" },
                { "cp_coarse_grained_class": 20, "type": "MESH" },
                { "cp_coarse_grained_class": 21, "type": "MESH" },
                { "cp_coarse_grained_class": 23, "type": "MESH" },
                { "cp_coarse_grained_class": 27, "type": "MESH" },
                { "cp_coarse_grained_class": 28, "type": "MESH" },
                { "cp_coarse_grained_class": 29, "type": "MESH" },
                { "cp_coarse_grained_class": 30, "type": "MESH" },
                { "cp_coarse_grained_class": 31, "type": "MESH" },
                { "cp_coarse_grained_class": 33, "type": "MESH" },
                { "cp_coarse_grained_class": 34, "type": "MESH" },
                { "cp_coarse_grained_class": 35, "type": "MESH" },
                { "cp_coarse_grained_class": 39, "type": "MESH" },
                { "cp_coarse_grained_class": 40, "type": "MESH" },
                { "cp_coarse_grained_class": 41, "type": "MESH" },
                { "cp_coarse_grained_class": 44, "type": "MESH" },
                { "cp_coarse_grained_class": 45, "type": "MESH" },
                { "cp_coarse_grained_class": 46, "type": "MESH" },
                { "cp_coarse_grained_class": 47, "type": "MESH" },
                { "cp_coarse_grained_class": 48, "type": "MESH" },
                { "cp_coarse_grained_class": 49, "type": "MESH" },
                { "cp_coarse_grained_class": 50, "type": "MESH" },
                { "cp_coarse_grained_class": 56, "type": "MESH" },
                { "cp_coarse_grained_class": 72, "type": "MESH" },
                { "cp_coarse_grained_class": 73, "type": "MESH" },
                { "cp_coarse_grained_class": 74, "type": "MESH" },
              ],
          },
          "cp_place_on": True,
          "cp_physics_collision_shape": "CONVEX_DECOMPOSITION",
        },
      },
      {
        "module": "loader.BlendLoader",
        "config": {
          "path": {
            "provider": "sampler.Path",
            "path": "resources/blenderkit_medium_clutter/models/*.blend",
          },
          "add_properties": {
            "cp_category_id": 0,
            "cp_physics": True,
            "cp_medium_clutter": True,
          },
          "cf_set_shading": "AUTO",
          "cf_apply_transformation": True,
        },
        "amount_of_repetitions": {
          "provider": "sampler.Value",
          "type": "int",
          "min": 0,
          "max": 5
        },
      },
      {
        "module": "loader.BlendLoader",
        "config": {
          "path": {
            "provider": "sampler.Path",
            "path": "resources/blenderkit_small_clutter/models/*.blend",
          },
          "add_properties": {
            "cp_category_id": 0,
            "cp_physics": True
          },
          "cf_set_shading": "AUTO",
          "cf_apply_transformation": True,
        },
        "amount_of_repetitions": {
          "provider": "sampler.Value",
          "type": "int",
          "min": 0,
          "max": 10
        },
      },
      {
        "module": "object.OnSurfaceSampler",
        "config": {
          "objects_to_sample": {
            "provider": "getter.Entity",
            "conditions": {
              "cp_medium_clutter": True,
              "type": "MESH"
            },
          },
          "surface": {
            "provider": "getter.Entity",
            "conditions": {
              "cp_place_on": True,
              "type": "MESH"
            },
          },
          "pos_sampler": {
            "provider": "sampler.UpperRegionSampler",
            "min_height": 0.1,
            "max_height": 0.5,
            "to_sample_on":
              {
                "provider": "getter.Entity",
                "conditions": {
                  "cp_place_on": True,
                  "type": "MESH"
                },
              },
          },
          "min_distance": 0.2,
          "max_distance": 2.0,
          "rot_sampler": {
            "provider": "sampler.Uniform3d",
            "min": [ 0, 0, 0 ],
            "max": [ 0, 0, 6.28 ],
          },
        },
      },
      {
        "module": "loader.BlendLoader",
        "config": {
          "path": "/home/matthias/Data/Ubuntu/data/blender/cup.blend",
          "add_properties": {
            "cp_category_id": 1,
            "cp_physics": True,
            "cp_is_cup": True,
            "cp_bop_dataset_name": "cup"
          },
          "cf_set_shading": "SMOOTH",
        },
      },
      {
        "module": "loader.BopLoader",
        "config": {
          "bop_dataset_path": "resources/bop/tless",
          "model_type": "cad",
          "mm2m": True,
          "sample_objects": True,
          "num_of_objs_to_sample": {
            "provider": "sampler.Value",
            "type": "int",
            "min": 0,
            "max": 10,
          },
          "add_properties": {
            "cp_physics": True,
            "cp_category_id": 0 },
          "cf_set_shading": "AUTO",
        },
      },
      {
        "module": "loader.BopLoader",
        "config":
          {
            "bop_dataset_path": "resources/bop/lm",
            "model_type": "",
            "mm2m": True,
            "sample_objects": True,
            "num_of_objs_to_sample":
              {
                "provider": "sampler.Value",
                "type": "int",
                "min": 0,
                "max": 3,
              },
            "add_properties": {
              "cp_physics": True,
              "cp_category_id": 0
            },
            "cf_set_shading": "AUTO",
          },
      },
      {
        "module": "loader.BopLoader",
        "config": {
          "bop_dataset_path": "resources/bop/ycbv",
          "model_type": "",
          "mm2m": True,
          "sample_objects": True,
          "obj_instances_limit": 1,
          "num_of_objs_to_sample": {
            "provider": "sampler.Value",
            "type": "int",
            "min": 0,
            "max": 3,
          },
          "add_properties": {
            "cp_physics": True,
            "cp_category_id": 0
          },
          "cf_set_shading": "AUTO",
        },
      },
      {
        "module": "manipulators.MaterialManipulator",
        "config": {
          "selector": {
            "provider": "getter.Material",
            "conditions":
              [
                {
                  "cf_use_materials_of_objects": {
                    "provider": "getter.Entity",
                    "conditions": {
                      "cp_is_cup": True,
                      "type": "MESH"
                    },
                  },
                  "cf_principled_bsdf_Alpha_eq": 1.0,
                },
              ],
          },
          "cf_set_specular": {
            "provider": "sampler.Value",
            "type": "float",
            "min": 0.4,
            "max": 0.6,
          },
          "cf_set_roughness": {
            "provider": "sampler.Value",
            "type": "float",
            "min": 0.0,
            "max": 1.0,
          },
        },
      },
      {
        "module": "manipulators.MaterialManipulator",
        "config": {
          "selector": {
            "provider": "getter.Material",
            "conditions":
              [
                { "name": "bop_tless_vertex_col_material.*" },
                { "name": "bop_lm_vertex_col_material.*" },
                { "name": "bop_ycbv_vertex_col_material.*" },
              ],
          },
          "cf_set_specular": {
            "provider": "sampler.Value",
            "type": "float",
            "min": 0.0,
            "max": 1.0,
          },
          "cf_set_roughness": {
            "provider": "sampler.Value",
            "type": "float",
            "min": 0.0,
            "max": 1.0,
          },
        },
      },
      {
        "module": "manipulators.MaterialManipulator",
        "config": {
          "selector": {
            "provider": "getter.Material",
            "conditions": {
              "name": "bop_tless_vertex_col_material.*"
            },
          },
          "cf_set_base_color": {
            "provider": "sampler.Color",
            "min": [ 0.0, 0.0, 0.0, 1.0 ],
            "max": [ 1.0, 1.0, 1.0, 1.0 ],
          },
          "cf_set_metallic": {
            "provider": "sampler.Value",
            "type": "float",
            "min": 0.0,
            "max": 1.0,
          },
        },
      },
      {
        "module": "object.ObjectPoseSampler",
        "config": {
          "objects_to_sample": {
            "provider": "getter.Entity",
            "conditions": {
              "cp_physics": True,
              "type": "MESH"
            },
          },
          "pos_sampler": {
            "provider": "sampler.UpperRegionSampler",
            "min_height": 0.2,
            "max_height": 0.6,
            "to_sample_on": {
              "provider": "getter.Entity",
              "conditions": {
                "cp_place_on": True,
                "type": "MESH"
              },
            },
          },
          "rot_sampler": {
            "provider": "sampler.UniformSO3"
          },
        },
      },
      {
        "module": "object.PhysicsPositioning",
        "config": {
          "min_simulation_time": 1,
          "max_simulation_time": 20,
          "check_object_interval": 1,
          "solver_iters": 25,
          "substeps_per_frame": 20,
          "friction": 100.0,
          "linear_damping": 0.99,
          "angular_damping": 0.99,
        },
      },
      {
        "module": "lighting.LightSampler",
        "config": {
          "lights":
            [
              {
                "location": {
                  "provider": "sampler.Shell",
                  "center": {
                    "provider": "getter.POI",
                    "selector":
                      {
                        "provider": "getter.Entity",
                        "conditions": {
                          "cp_is_cup": True,
                          "type": "MESH"
                        },
                      },
                  },
                  "radius_min": 1,
                  "radius_max": 3,
                  "elevation_min": 1,
                  "elevation_max": 89,
                },
                "color": {
                  "provider": "sampler.Color",
                  "min": [ 0.5, 0.5, 0.5, 1 ],
                  "max": [ 1, 1, 1, 1 ],
                },
                "type": "POINT",
                "energy": {
                  "provider": "sampler.Value",
                  "type": "int",
                  "min": 100,
                  "max": 1000,
                },
              },
            ],
        },
      },
      {
        "module": "camera.CameraSampler",
        "config": {
          "cam_poses":
            [
              {
                "number_of_samples": 5,
                "max_tries": 100000,
                "proximity_checks": {
                  "min": 0.2
                },
                "check_if_objects_visible": {
                  "provider": "getter.Entity",
                  "conditions": {
                    "cp_is_cup": True,
                    "type": "MESH"
                  },
                },
                "location": {
                  "provider": "sampler.Shell",
                  "center": {
                    "provider": "getter.POI",
                    "selector": {
                      "provider": "getter.Entity",
                      "conditions": {
                        "cp_is_cup": True,
                        "type": "MESH"
                      },
                    },
                  },
                  "radius_min": 0.2,
                  "radius_max": 1.0,
                  "elevation_min": 1,
                  "elevation_max": 89,
                  "uniform_elevation": True,
                },
                "rotation": {
                  "format": "look_at",
                  "value": {
                    "provider": "getter.AttributeMerger",
                    "elements":
                      [
                        {
                          "provider": "getter.POI",
                          "selector": {
                            "provider": "getter.Entity",
                            "conditions": {
                              "cp_is_cup": True,
                              "type": "MESH"
                            },
                          },
                        },
                        {
                          "provider": "sampler.Uniform3d",
                          "min": [ -0.5, -0.5, -0.5 ],
                          "max": [ 0.5, 0.5, 0.5 ],
                        },
                      ],
                    "transform_by": "sum",
                  },
                  "inplane_rot": {
                    "provider": "sampler.Value",
                    "type": "float",
                    "min": -0.7854,
                    "max": 0.7854,
                  },
                },
              },
            ],
          "intrinsics": {
            "fov": 1,
            "resolution_x": 640,
            "resolution_y": 480,
            "depth_of_field": {
              "fstop": {
                "provider": "sampler.Value",
                "type": "float",
                "min": 2.8,
                "max": 8.0,
              },
              "aperture_blades": {
                "provider": "sampler.Value",
                "type": "int",
                "min": 5,
                "max": 9,
              },
              "focal_object": {
                "provider": "getter.Entity",
                "conditions": {
                  "cp_is_cup": True,
                  "type": "MESH"
                }
              }
            }
          },
        },
      },
      {
        "module": "renderer.RgbRenderer",
        "config": {
          "samples": 350,
          "max_bounces": 200,
          "diffuse_bounces": 200,
          "glossy_bounces": 200,
          "transmission_bounces": 200,
          "transparency_bounces": 200,
          "render_normals": True,
          "render_distance": True,
          "cpu_threads": 8
        },
      },
      {
        "module": "renderer.SegMapRenderer",
        "config": {
          "map_by": [ "instance", "class", "name" ],
          "default_values": {
            "class": 0,
            "name": "none"
          },
        },
      },
      {
        "module": "writer.CocoAnnotationsWriter",
        "config": {
          "append_to_existing_output": True
        },
      },
      {
        "module": "writer.BopWriter",
        "config": {
          "dataset": "cup",
          "append_to_existing_output": True,
          "postprocessing_modules": {
            "depth": [
              {
                "module": "postprocessing.TrimRedundantChannels",
              },
              {
                "module": "postprocessing.Dist2Depth",
              }
            ]
          }
        },
      },
      {
        "module": "writer.Hdf5Writer",
        "config": {
          "append_to_existing_output": True,
          "postprocessing_modules": {
            "depth": [
              {
                "module": "postprocessing.TrimRedundantChannels",
              },
              {
                "module": "postprocessing.Dist2Depth",
              }
            ]
          }
        }
      }
    ],
}
